'use client';

import { motion, AnimatePresence } from 'framer-motion';
import { useState, useEffect } from 'react';

interface Letter {
  id: number;
  title: string;
  content: string;
  emoji: string;
  color: string;
  position: { x: number; y: number };
  rotation: number;
  duration: number;
  path: { x: number[]; y: number[] }; // Qu·ªπ ƒë·∫°o ri√™ng
}

export default function Message() {
  const [selectedLetter, setSelectedLetter] = useState<number | null>(null);
  const [isMobile, setIsMobile] = useState(false);
  const [particles] = useState(() =>
    Array.from({ length: 20 }, (_, i) => ({
      id: i,
      emoji: ['üíï', 'üíñ', 'üíó', 'üíù', 'üå∏', 'üåπ', '‚ú®', 'üí´', 'üéÄ', 'üå∫'][i % 10],
      delay: i * 0.3,
      duration: 8 + Math.random() * 5,
      x: Math.random() * 100,
    }))
  );

  // C√°c l√° th∆∞ v·ªõi qu·ªπ ƒë·∫°o v√† t·ªëc ƒë·ªô ri√™ng bi·ªát - T·ªëc ƒë·ªô v·ª´a ph·∫£i
  const letters: Letter[] = [
    {
      id: 1,
      title: "L√° Th∆∞ ƒê·∫ßu Ti√™n üíå",
      emoji: "üíå",
      color: "from-pink-400 to-rose-500",
      content: "G·ª≠i ƒë·∫øn em y√™u c·ªßa anh,\n\nTrong ng√†y ƒë·∫∑c bi·ªát n√†y, anh mu·ªën n√≥i r·∫±ng em l√† ƒëi·ªÅu tuy·ªát v·ªùi nh·∫•t ƒë√£ ƒë·∫øn v·ªõi cu·ªôc ƒë·ªùi anh. Em l√† √°nh s√°ng soi ƒë∆∞·ªùng cho anh m·ªói ng√†y.\n\nCh√∫c em lu√¥n xinh ƒë·∫πp v√† h·∫°nh ph√∫c!\n\nY√™u em! üíï",
      position: { x: 15, y: 20 },
      rotation: -8,
      duration: 13, // V·ª´a ph·∫£i
      path: { x: [0, 35, -30, 38, -20, 0], y: [0, -50, -25, -55, -28, 0] },
    },
    {
      id: 2,
      title: "G·ª≠i em üåπ",
      emoji: "üåπ",
      color: "from-red-400 to-pink-500",
      content: "G·ª≠i em ch√∫t l·∫°c quan,\nkh√¥ng ch·ªù ng√†y l·∫•y l·∫°i.\nD√π ng√†y mai ngang tr√°i,\nmong em √≠t th·ªü d√†i.üíï",
      position: { x: 75, y: 25 },
      rotation: 12,
      duration: 16, // Ch·∫≠m h∆°n
      path: { x: [0, -40, 28, -35, 32, 0], y: [0, -38, -52, -35, -48, 0] },
    },
    {
      id: 3,
      title: "G·ª≠i em üíù",
      emoji: "üíù",
      color: "from-purple-400 to-pink-500",
      content: "Nguy·ªán cho em m·ªói ng√†y ƒë·ªÅu gi·∫£n ƒë∆°n,\nNg·∫©ng ƒë·∫ßu l√™n ƒë·ªÅu l√† d·ªãu d√†ng, ·∫•m √°p. üíñ",
      position: { x: 40, y: 60 },
      rotation: -15,
      duration: 14, // V·ª´a
      path: { x: [0, 42, -28, 45, -22, 0], y: [0, -58, -32, -62, -35, 0] },
    },
    {
      id: 4,
      title: "G·ª≠i em ü§ù",
      emoji: "ü§ù",
      color: "from-indigo-400 to-purple-500",
      content: "Kh√¥ng ch√∫c em gi√†u c√≥\nCh·ªâ ch√∫c em b√¨nh y√™n.\nKh√¥ng ch√∫c em l·ªông l·∫´y\nCh·ªâ mong em kh√¥ng mu·ªôn phi·ªÅn.",
      position: { x: 65, y: 65 },
      rotation: 10,
      duration: 17, // Ch·∫≠m
      path: { x: [0, -48, 32, -42, 36, 0], y: [0, -42, -58, -38, -54, 0] },
    },
    {
      id: 5,
      title: "L·ªùi Ch√∫c 20/10 üéâ",
      emoji: "üéâ",
      color: "from-yellow-400 to-orange-500",
      content: "Ch√∫c cho c√¥ g√°i c·ªßa anh c√≥ m·ªôt ng√†y l·ªÖ 20/10 th·∫≠t vui v·∫ª v√† h·∫°nh ph√∫c.\nCh√∫c em lu√¥n r·∫°ng r·ª° nh∆∞ √°nh m·∫∑t tr·ªùi, xinh ƒë·∫πp nh∆∞ hoa xu√¢n n·ªü.\n Ch√∫c em m·∫°nh kh·ªèe, th√†nh c√¥ng v√† h·∫°nh ph√∫c.\n\nM√£i m√£i l√† c√¥ng ch√∫a c·ªßa anh! üëëüå∏",
      position: { x: 20, y: 75 },
      rotation: -5,
      duration: 15, // V·ª´a ph·∫£i
      path: { x: [0, 38, -32, 40, -25, 0], y: [0, -52, -30, -56, -33, 0] },
    },
    {
      id: 6,
      title: "G·ª≠i em üòç",
      emoji: "üòç",
      color: "from-rose-400 to-red-500",
      content: "Anh y√™u n·ª• c∆∞·ªùi c·ªßa em,\nAnh y√™u √°nh m·∫Øt trong veo,\nAnh y√™u gi·ªçng n√≥i d·ªãu d√†ng,\nAnh y√™u tr√°i tim nh√¢n h·∫≠u.\n\nN√≥i chung l√†... anh y√™u t·∫•t c·∫£ v·ªÅ em! üíñüíØ",
      position: { x: 50, y: 35 },
      rotation: 8,
      duration: 14.5, // V·ª´a
      path: { x: [0, -45, 35, -48, 38, 0], y: [0, -45, -60, -42, -58, 0] },
    },
  ];

  useEffect(() => {
    const checkMobile = () => {
      setIsMobile(window.innerWidth < 768);
    };
    checkMobile();
    window.addEventListener('resize', checkMobile);
    return () => window.removeEventListener('resize', checkMobile);
  }, []);

  return (
    <div className="relative w-full h-screen overflow-hidden">
      {/* Animated floating particles */}
      {particles.map((particle) => (
        <motion.div
          key={particle.id}
          className="absolute text-2xl md:text-3xl pointer-events-none"
          initial={{
            x: `${particle.x}vw`,
            y: '110vh',
            opacity: 0,
            rotate: 0,
          }}
          animate={{
            y: '-10vh',
            opacity: [0, 1, 1, 0],
            rotate: 360,
            x: `${particle.x + (Math.random() - 0.5) * 20}vw`,
          }}
          transition={{
            duration: particle.duration,
            delay: particle.delay,
            repeat: Infinity,
            ease: "linear",
          }}
        >
          {particle.emoji}
        </motion.div>
      ))}

      {/* Title */}
      <motion.div
        initial={{ y: -100, opacity: 0 }}
        animate={{ y: 0, opacity: 1 }}
        transition={{ duration: 0.8, type: "spring" }}
        className="absolute top-4 md:top-8 left-0 right-0 z-30 text-center px-4"
      >
        <h1 className="text-4xl md:text-6xl font-bold gradient-text dancing-script drop-shadow-lg">
          {selectedLetter === null ? 'Ch√∫c m·ª´ng 20/10 em b√© y√™u' : letters.find(l => l.id === selectedLetter)?.title}
        </h1>
      </motion.div>

      {/* Floating Letters */}
      <AnimatePresence mode="wait">
        {selectedLetter === null ? (
          <motion.div
            key="letters-view"
            initial={{ opacity: 0 }}
            animate={{ opacity: 1 }}
            exit={{ opacity: 0 }}
            className="relative w-full h-full"
          >
            {letters.map((letter, index) => (
              <motion.div
                key={letter.id}
                className="absolute cursor-pointer"
                style={{
                  left: isMobile ? `${letter.position.x - 10}%` : `${letter.position.x}%`,
                  top: isMobile ? `${letter.position.y - 5}%` : `${letter.position.y}%`,
                }}
                initial={{
                  scale: 0,
                  rotate: letter.rotation,
                  opacity: 0,
                }}
                animate={{
                  scale: 1,
                  opacity: 1,
                  y: letter.path.y,
                  x: letter.path.x,
                  rotate: [
                    letter.rotation,
                    letter.rotation + 18,
                    letter.rotation - 18,
                    letter.rotation + 15,
                    letter.rotation - 12,
                    letter.rotation
                  ],
                }}
                transition={{
                  scale: {
                    delay: index * 0.15,
                    duration: 0.6,
                    type: "spring",
                    stiffness: 200,
                  },
                  opacity: {
                    delay: index * 0.15,
                    duration: 0.6,
                  },
                  y: {
                    delay: index * 0.15 + 0.8,
                    duration: letter.duration,
                    repeat: Infinity,
                    ease: "easeInOut",
                  },
                  x: {
                    delay: index * 0.15 + 0.8,
                    duration: letter.duration * 0.9,
                    repeat: Infinity,
                    ease: "easeInOut",
                  },
                  rotate: {
                    delay: index * 0.15 + 0.8,
                    duration: letter.duration / 1.2,
                    repeat: Infinity,
                    ease: "easeInOut",
                  }
                }}
                whileHover={{
                  scale: 1.25,
                  rotate: 0,
                  zIndex: 100,
                  y: -15,
                  transition: { duration: 0.3 }
                }}
                whileTap={{ scale: 0.95 }}
                onClick={() => setSelectedLetter(letter.id)}
              >
                {/* Envelope */}
                <div className="relative w-32 h-32 md:w-40 md:h-40">
                  {/* Envelope body */}
                  <motion.div
                    className={`absolute inset-0 bg-gradient-to-br ${letter.color} rounded-lg shadow-2xl`}
                    style={{
                      clipPath: 'polygon(0% 0%, 100% 0%, 100% 70%, 50% 100%, 0% 70%)',
                    }}
                  >
                    {/* Envelope flap line */}
                    <div className="absolute top-0 left-0 right-0 h-[70%] border-b-2 border-white/30"
                      style={{ clipPath: 'polygon(0% 100%, 50% 70%, 100% 100%)' }}
                    />
                  </motion.div>

                  {/* Letter peeking out */}
                  <motion.div
                    className="absolute top-2 left-2 right-2 bg-white rounded-sm h-20 md:h-24 shadow-inner"
                    animate={{
                      y: [-2, 3, -2],
                      rotate: [-0.5, 0.5, -0.5],
                    }}
                    transition={{
                      duration: 2.5,
                      repeat: Infinity,
                      ease: "easeInOut",
                    }}
                  >
                    <div className="p-2 md:p-3 text-xs md:text-sm text-gray-400 leading-tight">
                      Emm em n√®... 
                      <br />
                      Open em ƒëi ü§∑‚Äç‚ôÇÔ∏è
                    </div>
                  </motion.div>

                  {/* Emoji on envelope */}
                  <motion.div
                    className="absolute bottom-4 md:bottom-6 left-1/2 transform -translate-x-1/2 text-3xl md:text-4xl"
                    animate={{
                      scale: [1, 1.2, 1, 1.1, 1],
                      rotate: [0, -8, 8, -4, 0],
                    }}
                    transition={{
                      duration: 2,
                      repeat: Infinity,
                      ease: "easeInOut",
                    }}
                  >
                    {letter.emoji}
                  </motion.div>

                  {/* Glow effect */}
                  <motion.div
                    className={`absolute inset-0 bg-gradient-to-br ${letter.color} rounded-lg blur-xl opacity-50 -z-10`}
                    animate={{
                      opacity: [0.3, 0.6, 0.3],
                      scale: [0.9, 1.1, 0.9],
                    }}
                    transition={{
                      duration: 2.5,
                      repeat: Infinity,
                      ease: "easeInOut",
                    }}
                  />
                </div>
              </motion.div>
            ))}
          </motion.div>
        ) : (
          // Letter content view
          <motion.div
            key="letter-content"
            initial={{ scale: 0.8, opacity: 0, rotateY: 90 }}
            animate={{ scale: 1, opacity: 1, rotateY: 0 }}
            exit={{ scale: 0.8, opacity: 0, rotateY: -90 }}
            transition={{ duration: 0.5, type: "spring" }}
            className="absolute inset-0 flex items-center justify-center p-4 z-40"
            onClick={() => setSelectedLetter(null)}
          >
            {/* Backdrop */}
            <motion.div
              initial={{ opacity: 0 }}
              animate={{ opacity: 1 }}
              exit={{ opacity: 0 }}
              className="absolute inset-0 bg-black/40 backdrop-blur-sm"
            />

            {/* Letter content card */}
            <motion.div
              className={`relative max-w-2xl w-full bg-gradient-to-br ${letters.find(l => l.id === selectedLetter)?.color} rounded-3xl shadow-2xl p-8 md:p-12 text-white`}
              onClick={(e) => e.stopPropagation()}
              initial={{ y: 50 }}
              animate={{ y: 0 }}
            >
              {/* Close button */}
              <button
                onClick={() => setSelectedLetter(null)}
                className="absolute top-4 right-4 w-10 h-10 flex items-center justify-center bg-white/20 hover:bg-white/30 rounded-full backdrop-blur-sm transition-all"
              >
                <span className="text-2xl">‚úï</span>
              </button>

              {/* Emoji header */}
              <motion.div
                className="text-6xl md:text-7xl text-center mb-6"
                animate={{
                  rotate: [0, 10, -10, 0],
                  scale: [1, 1.1, 1],
                }}
                transition={{
                  duration: 3,
                  repeat: Infinity,
                  ease: "easeInOut",
                }}
              >
                {letters.find(l => l.id === selectedLetter)?.emoji}
              </motion.div>

              {/* Content */}
              <motion.div
                initial={{ opacity: 0, y: 20 }}
                animate={{ opacity: 1, y: 0 }}
                transition={{ delay: 0.3 }}
                className="text-center space-y-6"
              >
                <p className="text-lg md:text-xl leading-relaxed whitespace-pre-line dancing-script">
                  {letters.find(l => l.id === selectedLetter)?.content}
                </p>
              </motion.div>

              {/* Decorative hearts */}
              <div className="absolute -top-6 left-1/2 transform -translate-x-1/2 flex gap-2">
                {[...Array(5)].map((_, i) => (
                  <motion.span
                    key={i}
                    className="text-2xl"
                    animate={{
                      y: [0, -10, 0],
                    }}
                    transition={{
                      duration: 1.5,
                      delay: i * 0.1,
                      repeat: Infinity,
                    }}
                  >
                    üíï
                  </motion.span>
                ))}
              </div>

              {/* Bottom decoration */}
              {/* <motion.div
                className="mt-8 text-center text-sm opacity-80"
                initial={{ opacity: 0 }}
                animate={{ opacity: 0.8 }}
                transition={{ delay: 0.6 }}
              >
                Click b√™n ngo√†i ƒë·ªÉ ƒë√≥ng v√† xem c√°c l√° th∆∞ kh√°c üíå
              </motion.div> */}
            </motion.div>
          </motion.div>
        )}
      </AnimatePresence>
    </div>
  );
}
